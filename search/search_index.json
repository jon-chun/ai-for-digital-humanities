{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to AI for Humanity Introduction This site provides a unique \"humanity-first\" introductory course to Machine Learning and Artificial Inteligence. It takes a interdisciplinary approach to contextualizing, extrapolating and interpreting how ML/AI is increasingly intertwined in understanding the big issues of our day. This course covers FATE (Fairness, Accuracy, Transparency and Explainability) of AI decision-making, state surveillance, workplace automation, lethal autonomous weapons, biotechnologies, etc. synthesis of a broad interdisciplinary approach to the To our knowledge, this is the first A humanity-first approach to teaching Artificial Intelligence \u201cWhy isn\u2019t AI a branch of mathematics?\u201d Norvig and Russell ask in their seminal textbook Artificial Intelligence: A Modern Approach. \u201cThe first answer,\u201d they explain, \u201cis that AI from the start embraced the idea of duplicating human faculties such as creativity, self-improvement, and language use\u201d(18). We explore AI from this humanist perspective by building a foundation to understand the creativity, self-improvement and language at the core of the discipline. Our approach blends the conceptual with hands-on exploration and application. We think through the humanist-centered theory and practice of artificial intelligence and machine learning from a liberal arts perspective that is highly interdisciplinary in nature. To that end, the course will touch on domains intertwined with AI like cognitive science and language and linguistics. Textual analysis will receive our major attention and will provide an ideal foundation for literature students interested in computational approaches to literature. However we will also explore a wide range of textual applications that will be of interest to a broader range of students: textual analytics that help us explore disciplines like economics, politics, sociology, cultural studies, and psychology. The last weeks of the course will move to image and sound by building on previous skills acquired from textual analysis. DH Colab DH Colab is the virtual Digital Humanities Colab at Kenyon College. Students and faculty work side by side to explore new computational approaches and create innovative research projects. Humanity and Technology Technology lies at or near the heart of nearly every major issue facing us:** threats to individual freedom via pervasive state surveillance threats to democracy via social media manipulation social injustices from biased or inaccurate data/algorithms that influence judicial sentencing, lending, hiring and promotions long-term structural unemployment via automation the proliferation of inexpensive lethal autonomous weapons the Pandora\u2019s box of increasingly cheap and accurate eugenics based in part on bioinformatics We bridge the gap between technology and the humanities by providing an intellectual framework of core concepts across disparate disciplines. Beginning with data and culminating with Artificial Intelligence, you will learn how to integrate seemingly isolated technical concepts within a cohesive perspective.","title":"Home"},{"location":"#welcome-to-ai-for-humanity","text":"","title":"Welcome to AI for Humanity"},{"location":"#introduction","text":"This site provides a unique \"humanity-first\" introductory course to Machine Learning and Artificial Inteligence. It takes a interdisciplinary approach to contextualizing, extrapolating and interpreting how ML/AI is increasingly intertwined in understanding the big issues of our day. This course covers FATE (Fairness, Accuracy, Transparency and Explainability) of AI decision-making, state surveillance, workplace automation, lethal autonomous weapons, biotechnologies, etc. synthesis of a broad interdisciplinary approach to the To our knowledge, this is the first","title":"Introduction"},{"location":"#a-humanity-first-approach-to-teaching-artificial-intelligence","text":"\u201cWhy isn\u2019t AI a branch of mathematics?\u201d Norvig and Russell ask in their seminal textbook Artificial Intelligence: A Modern Approach. \u201cThe first answer,\u201d they explain, \u201cis that AI from the start embraced the idea of duplicating human faculties such as creativity, self-improvement, and language use\u201d(18). We explore AI from this humanist perspective by building a foundation to understand the creativity, self-improvement and language at the core of the discipline. Our approach blends the conceptual with hands-on exploration and application. We think through the humanist-centered theory and practice of artificial intelligence and machine learning from a liberal arts perspective that is highly interdisciplinary in nature. To that end, the course will touch on domains intertwined with AI like cognitive science and language and linguistics. Textual analysis will receive our major attention and will provide an ideal foundation for literature students interested in computational approaches to literature. However we will also explore a wide range of textual applications that will be of interest to a broader range of students: textual analytics that help us explore disciplines like economics, politics, sociology, cultural studies, and psychology. The last weeks of the course will move to image and sound by building on previous skills acquired from textual analysis.","title":"A humanity-first approach to teaching Artificial Intelligence"},{"location":"#dh-colab","text":"DH Colab is the virtual Digital Humanities Colab at Kenyon College. Students and faculty work side by side to explore new computational approaches and create innovative research projects.","title":"DH Colab"},{"location":"#humanity-and-technology","text":"Technology lies at or near the heart of nearly every major issue facing us:** threats to individual freedom via pervasive state surveillance threats to democracy via social media manipulation social injustices from biased or inaccurate data/algorithms that influence judicial sentencing, lending, hiring and promotions long-term structural unemployment via automation the proliferation of inexpensive lethal autonomous weapons the Pandora\u2019s box of increasingly cheap and accurate eugenics based in part on bioinformatics We bridge the gap between technology and the humanities by providing an intellectual framework of core concepts across disparate disciplines. Beginning with data and culminating with Artificial Intelligence, you will learn how to integrate seemingly isolated technical concepts within a cohesive perspective.","title":"Humanity and Technology"},{"location":"about/","text":"About the Computational Digital Humanities Colaboratory (cDH Colab) Jon Chun Jon Chun has degrees in computer science and cognitive science from UC Berkeley and UT Austin. He has co-founded several startups including the world\u2019s largest anonymity service backed by large Wall Street hedge funds and the CIA\u2019s venture fund In-Q-Tel. His specialization in cross-cultural experiences of technology stems from working and studying throughout the US, Asia and Latin America. Before arriving in Gambier he was a Director for one of the worlds largest security corporations in Silicon Valley and Entrepreneur in Residence at UC Berkeley. He speaks English, Spanish and Japanese. As an American Heart Research Fellow, he conducted and published research in both gene therapy and medical informatics. He has also worked for the Advanced Light Source Group at Lawrence Berkeley Laboratory and the semiconductor research consortium SEMATECH. His research interests include machine learning, artificial intelligence, data analytics, data visualizations and statistical modeling. His most recent research is on NLP in sentiment analysis and generative narrative. He is interested in bringing diverse voices to urgent debates surrounding technology\u2019s growing impact on society. His courses, Programming Humanity and AI for the Humanities, seek to bridge the gap between technology and the Humanities by designing an intellectual framework grounded in the liberal arts and computational thinking. AREAS OF EXPERTISE Machine Learning/Artificial Intelligence, Data Analytics Natural Language Processing (NLP) AffectiveAI and Multimodal Sentiment Analysis Time Series Analysis and Economic Modeling eXplainable AI (XAI) AI Fairness, Accuracy, Transparency and Explainability (FATE) Innovation and Startups EDUCATION 1995 \u2014 Master of Science from University of Texas at Austin 1989 \u2014 Bachelor of Science from Univ. of California Berkeley RECENT COURSES * IPHS 200 \u2013 Programming Humanity * IPHS 290 - Cultural Analytics * IPHS 300 \u2013 Artificial Intelligence for the Humanities * IPHS 484 - Senior Seminar / Independent Research Katherine Elkins Katherine Elkins is founder of Kenyon\u2019s Comparative World Literature Program and the NEH Distinguished Teaching Professor of Humanities. She has won awards for both research and teaching, most recently Kenyon\u2019s Senior Faculty Trustee Teaching Award. Currently, she is developing a Digital Humanities program unique to Kenyon. Her many lectures on French literature and the modern novel are available on audible.com, and her research has been published in journals like Comparative Literature Studies, Modern Language Quarterly, Modernism/Modernity, Discourse and The French Review. She has also presented research at conferences both nationally and internationally, and is editor and contributor of the Oxford Studies in Literature and Philosophy: Proust (forthcoming). She and Jon Chun are presently developing new computational approaches to literary analysis. AREAS OF EXPERTISE Professor Elkins\u2019 research interests include literature and philosophy, modernist studies, cognitive studies, artificial intelligence, digital humanities and cultural analytics. EDUCATION 2002 \u2014 Doctor of Philosophy from Univ. of California Berkeley 1990 \u2014 Bachelor of Arts from Yale University RECENT COURSES IPHS 200 \u2013 Programming Humanity IPHS 290 - Cultural Analytics IPHS 300 \u2013 Artificial Intelligence for the Humanities IPHS 484 - Senior Seminar / Independent Research","title":"About"},{"location":"about/#about-the-computational-digital-humanities-colaboratory-cdh-colab","text":"","title":"About the Computational Digital Humanities Colaboratory (cDH Colab)"},{"location":"about/#jon-chun","text":"Jon Chun has degrees in computer science and cognitive science from UC Berkeley and UT Austin. He has co-founded several startups including the world\u2019s largest anonymity service backed by large Wall Street hedge funds and the CIA\u2019s venture fund In-Q-Tel. His specialization in cross-cultural experiences of technology stems from working and studying throughout the US, Asia and Latin America. Before arriving in Gambier he was a Director for one of the worlds largest security corporations in Silicon Valley and Entrepreneur in Residence at UC Berkeley. He speaks English, Spanish and Japanese. As an American Heart Research Fellow, he conducted and published research in both gene therapy and medical informatics. He has also worked for the Advanced Light Source Group at Lawrence Berkeley Laboratory and the semiconductor research consortium SEMATECH. His research interests include machine learning, artificial intelligence, data analytics, data visualizations and statistical modeling. His most recent research is on NLP in sentiment analysis and generative narrative. He is interested in bringing diverse voices to urgent debates surrounding technology\u2019s growing impact on society. His courses, Programming Humanity and AI for the Humanities, seek to bridge the gap between technology and the Humanities by designing an intellectual framework grounded in the liberal arts and computational thinking. AREAS OF EXPERTISE Machine Learning/Artificial Intelligence, Data Analytics Natural Language Processing (NLP) AffectiveAI and Multimodal Sentiment Analysis Time Series Analysis and Economic Modeling eXplainable AI (XAI) AI Fairness, Accuracy, Transparency and Explainability (FATE) Innovation and Startups EDUCATION 1995 \u2014 Master of Science from University of Texas at Austin 1989 \u2014 Bachelor of Science from Univ. of California Berkeley RECENT COURSES * IPHS 200 \u2013 Programming Humanity * IPHS 290 - Cultural Analytics * IPHS 300 \u2013 Artificial Intelligence for the Humanities * IPHS 484 - Senior Seminar / Independent Research","title":"Jon Chun"},{"location":"about/#katherine-elkins","text":"Katherine Elkins is founder of Kenyon\u2019s Comparative World Literature Program and the NEH Distinguished Teaching Professor of Humanities. She has won awards for both research and teaching, most recently Kenyon\u2019s Senior Faculty Trustee Teaching Award. Currently, she is developing a Digital Humanities program unique to Kenyon. Her many lectures on French literature and the modern novel are available on audible.com, and her research has been published in journals like Comparative Literature Studies, Modern Language Quarterly, Modernism/Modernity, Discourse and The French Review. She has also presented research at conferences both nationally and internationally, and is editor and contributor of the Oxford Studies in Literature and Philosophy: Proust (forthcoming). She and Jon Chun are presently developing new computational approaches to literary analysis. AREAS OF EXPERTISE Professor Elkins\u2019 research interests include literature and philosophy, modernist studies, cognitive studies, artificial intelligence, digital humanities and cultural analytics. EDUCATION 2002 \u2014 Doctor of Philosophy from Univ. of California Berkeley 1990 \u2014 Bachelor of Arts from Yale University RECENT COURSES IPHS 200 \u2013 Programming Humanity IPHS 290 - Cultural Analytics IPHS 300 \u2013 Artificial Intelligence for the Humanities IPHS 484 - Senior Seminar / Independent Research","title":"Katherine Elkins"},{"location":"courses/","text":"Curriculum: AI for Computational Digital Humanites Integrated Program for Humane Studies As a student in Kenyon\u2019s oldest interdisciplinary program, you will explore how different cultures have answered life\u2019s fundamental questions. What makes a good life? How do we live in a community? Why do we have art? What defines our humanity? You will consider these questions from multiple perspectives, studying with faculty from across the curriculum. Explore human ideas, creations and inventions that have defined our present. Classes in the Integrated Program in Humane Studies are for those who won\u2019t settle for either/or and who are not content with a single perspective. The program\u2019s first-year course explores human ideas, creations and inventions that have defined our present, from the origins of poetry and philosophy to the foundations of computer science. Focus on real-world challenges. Later courses dive more deeply into our present and even our future. Can we program our humanity into our inventions or will we be shaped irrevocably by our tools? Can AI know us better than ourselves and offer a mirror onto our very nature? By the end of the concentration, students will have a digital portfolio of hands-on projects that focus on real-world challenges. Concentrators have the opportunity to join the KDH lab and be part of a collaborative multi-disciplinary team engaged in cutting-edge research. Digital Humanities Digital humanities at Kenyon encompasses a dual lens. We empower the next generation of thinkers with the conceptual framework underlying our Age of Information \u2014 from dataism and algorithmic thinking to synthetic biology and artificial intelligence. Our unique approach to computational thinking positions students to engage with the many practical, theoretical and ethical issues surrounding technological innovation and social change. Digital humanities also explores the most recent computational approaches as a way to augment \u2014 rather than replace \u2014 more traditional humanist inquiry. Students imagine and pursue new avenues of research by identifying unexplored datasets of text, image and sound, while embracing new computational frameworks that are increasingly powerful and easy to use. We focus on finding interdisciplinary solutions to today's challenges. Students interested in digital humanities are encouraged to start with our introductory course, \"Programming Humanity.\" Advanced courses include \"A.I. for the Humanities.\" All digital humanities courses are project-based, and students will have a portfolio of innovative projects by the end of their course of study. Courses IPHS200 Programming Humanity Artificial intelligence is poised to surpass humans in intellectual abilities that we often associate with being human. What are the implications for how we think about digital humanities? Can we program humanity by employing AI to generate music, analyze vast quantities of literary text, or produce great visual works of art? Or will humans be programmed through predictive policing, manipulations of social media, and domestic surveillance? Can the non-profit OpenAI build an AI to benefit humanity, or will the prophecies of Stephen Hawking, Bill Gates, and Elon Musk (who all claim AI as the greatest existential threat to humanity) come true? This course will bridge the gap between humanities and technology in both a theoretical and practical manner. Each week we will present a fundamental technology like data visualization, social media hacking or machine learning through both lecture and hands-on labs. In parallel, we will contextualize our understanding of new technologies with discussions of the larger social impact and ethical dilemmas through case studies like computational literary analysis, digital profiling for predictive policing or issues stemming from potential broad structural economic unemployment. The broader goal of the course is to understand technologies driving seismic social change in order to be able to speak with an informed voice. This is an introductory survey course with no prerequisites. It is designed for both humanities students seeking to understand technology and technology-oriented students seeking to understand the larger social and ethical issues surrounding technology. IPHS300 AI for the Humanities \"Why isn\u2019t AI a branch of mathematics?\" Norvig and Russell ask in their seminal textbook \"Artificial Intelligence: A Modern Approach.\" \"The first answer,\" they explain, \"is that AI from the start embraced the idea of duplicating human faculties such as creativity, self-improvement, and language use\"(18). We explore AI from this humanist perspective by building a foundation to understand the creativity, self-improvement and language at the core of the discipline. Our approach blends the conceptual with hands-on exploration and application. We think through the humanist-centered theory and practice of artificial intelligence and machine learning from a liberal arts perspective that is highly interdisciplinary in nature. To that end, the course will touch on domains intertwined with AI like cognitive science and language and linguistics. Textual analysis will receive our major attention and will provide an ideal foundation for literature students interested in computational approaches to literature. However we will also explore a wide range of textual applications that will be of interest to a broader range of students: textual analytics that help us explore disciplines like economics, politics, sociology, cultural studies and psychology. The last weeks of the course will move to image and sound by building on previous skills acquired from textual analysis. IPHS220 Cultural Analytics Cultural analytics is the study of society and social phenomena by analyzing data and the way it flows. This course presumes some coding experience or the introductory course to Digital Humanities, Programming Humanity. We start my visualizing geospatial data via maps and charts. We\u2019ll build on our skills using API\u2019s to create original datasets from social media sites like Twitter. Then we\u2019ll develop natural language processing skills including sentiment analysis and topic clustering to explore text for insights. We\u2019ll also learn how to graph and explore social networks. In class, we\u2019ll do some hands-on projects like analyzing the social network of Game of Thrones and trying to classify who\u2019s tweeting: Trump or Trudeau. In the final segment of the course, students develop their own project centered on their interests. IPHS484 Senior Seminar/Independent Study","title":"Courses"},{"location":"courses/#curriculum-ai-for-computational-digital-humanites","text":"","title":"Curriculum: AI for Computational Digital Humanites"},{"location":"courses/#integrated-program-for-humane-studies","text":"As a student in Kenyon\u2019s oldest interdisciplinary program, you will explore how different cultures have answered life\u2019s fundamental questions. What makes a good life? How do we live in a community? Why do we have art? What defines our humanity? You will consider these questions from multiple perspectives, studying with faculty from across the curriculum. Explore human ideas, creations and inventions that have defined our present. Classes in the Integrated Program in Humane Studies are for those who won\u2019t settle for either/or and who are not content with a single perspective. The program\u2019s first-year course explores human ideas, creations and inventions that have defined our present, from the origins of poetry and philosophy to the foundations of computer science. Focus on real-world challenges. Later courses dive more deeply into our present and even our future. Can we program our humanity into our inventions or will we be shaped irrevocably by our tools? Can AI know us better than ourselves and offer a mirror onto our very nature? By the end of the concentration, students will have a digital portfolio of hands-on projects that focus on real-world challenges. Concentrators have the opportunity to join the KDH lab and be part of a collaborative multi-disciplinary team engaged in cutting-edge research.","title":"Integrated Program for Humane Studies"},{"location":"courses/#digital-humanities","text":"Digital humanities at Kenyon encompasses a dual lens. We empower the next generation of thinkers with the conceptual framework underlying our Age of Information \u2014 from dataism and algorithmic thinking to synthetic biology and artificial intelligence. Our unique approach to computational thinking positions students to engage with the many practical, theoretical and ethical issues surrounding technological innovation and social change. Digital humanities also explores the most recent computational approaches as a way to augment \u2014 rather than replace \u2014 more traditional humanist inquiry. Students imagine and pursue new avenues of research by identifying unexplored datasets of text, image and sound, while embracing new computational frameworks that are increasingly powerful and easy to use. We focus on finding interdisciplinary solutions to today's challenges. Students interested in digital humanities are encouraged to start with our introductory course, \"Programming Humanity.\" Advanced courses include \"A.I. for the Humanities.\" All digital humanities courses are project-based, and students will have a portfolio of innovative projects by the end of their course of study.","title":"Digital Humanities"},{"location":"courses/#courses","text":"","title":"Courses"},{"location":"courses/#iphs200-programming-humanity","text":"Artificial intelligence is poised to surpass humans in intellectual abilities that we often associate with being human. What are the implications for how we think about digital humanities? Can we program humanity by employing AI to generate music, analyze vast quantities of literary text, or produce great visual works of art? Or will humans be programmed through predictive policing, manipulations of social media, and domestic surveillance? Can the non-profit OpenAI build an AI to benefit humanity, or will the prophecies of Stephen Hawking, Bill Gates, and Elon Musk (who all claim AI as the greatest existential threat to humanity) come true? This course will bridge the gap between humanities and technology in both a theoretical and practical manner. Each week we will present a fundamental technology like data visualization, social media hacking or machine learning through both lecture and hands-on labs. In parallel, we will contextualize our understanding of new technologies with discussions of the larger social impact and ethical dilemmas through case studies like computational literary analysis, digital profiling for predictive policing or issues stemming from potential broad structural economic unemployment. The broader goal of the course is to understand technologies driving seismic social change in order to be able to speak with an informed voice. This is an introductory survey course with no prerequisites. It is designed for both humanities students seeking to understand technology and technology-oriented students seeking to understand the larger social and ethical issues surrounding technology.","title":"IPHS200 Programming Humanity"},{"location":"courses/#iphs300-ai-for-the-humanities","text":"\"Why isn\u2019t AI a branch of mathematics?\" Norvig and Russell ask in their seminal textbook \"Artificial Intelligence: A Modern Approach.\" \"The first answer,\" they explain, \"is that AI from the start embraced the idea of duplicating human faculties such as creativity, self-improvement, and language use\"(18). We explore AI from this humanist perspective by building a foundation to understand the creativity, self-improvement and language at the core of the discipline. Our approach blends the conceptual with hands-on exploration and application. We think through the humanist-centered theory and practice of artificial intelligence and machine learning from a liberal arts perspective that is highly interdisciplinary in nature. To that end, the course will touch on domains intertwined with AI like cognitive science and language and linguistics. Textual analysis will receive our major attention and will provide an ideal foundation for literature students interested in computational approaches to literature. However we will also explore a wide range of textual applications that will be of interest to a broader range of students: textual analytics that help us explore disciplines like economics, politics, sociology, cultural studies and psychology. The last weeks of the course will move to image and sound by building on previous skills acquired from textual analysis.","title":"IPHS300 AI for the Humanities"},{"location":"courses/#iphs220-cultural-analytics","text":"Cultural analytics is the study of society and social phenomena by analyzing data and the way it flows. This course presumes some coding experience or the introductory course to Digital Humanities, Programming Humanity. We start my visualizing geospatial data via maps and charts. We\u2019ll build on our skills using API\u2019s to create original datasets from social media sites like Twitter. Then we\u2019ll develop natural language processing skills including sentiment analysis and topic clustering to explore text for insights. We\u2019ll also learn how to graph and explore social networks. In class, we\u2019ll do some hands-on projects like analyzing the social network of Game of Thrones and trying to classify who\u2019s tweeting: Trump or Trudeau. In the final segment of the course, students develop their own project centered on their interests.","title":"IPHS220 Cultural Analytics"},{"location":"courses/#iphs484-senior-seminarindependent-study","text":"","title":"IPHS484 Senior Seminar/Independent Study"},{"location":"research/","text":"Research and the Computational Digital Humanities Colab Here are links to our research as well as projects and research we supervise and collaborate on in both our AI Digitial Humanities courses and DH Colab. Faculty Kathrine L. Elkins Jon Chun Students IPHS200 Programming Humanity IPHS300 AI for the Humanities IPHS484 Senior Seminar/Independent Research All Digital Humanities Projects","title":"Research"},{"location":"research/#research-and-the-computational-digital-humanities-colab","text":"Here are links to our research as well as projects and research we supervise and collaborate on in both our AI Digitial Humanities courses and DH Colab.","title":"Research and the Computational Digital Humanities Colab"},{"location":"research/#faculty","text":"Kathrine L. Elkins Jon Chun","title":"Faculty"},{"location":"research/#students","text":"","title":"Students"},{"location":"research/#iphs200-programming-humanity","text":"","title":"IPHS200 Programming Humanity"},{"location":"research/#iphs300-ai-for-the-humanities","text":"","title":"IPHS300 AI for the Humanities"},{"location":"research/#iphs484-senior-seminarindependent-research","text":"","title":"IPHS484 Senior Seminar/Independent Research"},{"location":"research/#all-digital-humanities-projects","text":"","title":"All Digital Humanities Projects"},{"location":"resources/","text":"Resources for the Computational Digital Humanities Colab This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Pipeline Data Models Metrics AutoML Visualization XAI MLOps Tasks Natural Language Processing (NLP) Sound Image Video Agents Simulations Applications DH Security FinTech MedTech CS Programming Python OS DB Web Design Math General Statisitcs Core Engineering Personal Research Courses Books People Career","title":"Resources"},{"location":"resources/#resources-for-the-computational-digital-humanities-colab","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo.","title":"Resources for the Computational Digital Humanities Colab"},{"location":"resources/#pipeline","text":"Data Models Metrics AutoML Visualization XAI MLOps","title":"Pipeline"},{"location":"resources/#tasks","text":"Natural Language Processing (NLP) Sound Image Video Agents Simulations","title":"Tasks"},{"location":"resources/#applications","text":"DH Security FinTech MedTech","title":"Applications"},{"location":"resources/#cs","text":"Programming Python OS DB Web Design","title":"CS"},{"location":"resources/#math","text":"General Statisitcs Core Engineering","title":"Math"},{"location":"resources/#personal","text":"Research Courses Books People Career","title":"Personal"},{"location":"resources_initial/","text":"Resources for the Computational Digital Humanities Colab This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Contents: Models Datasets Models Metrics XAI Tasks Natural Language Processing (NLP) Image Video Reinforcement Learning (RL) MLOPs Aggregator Growth Website Courses People Career Models Datasets Aggregator Preprocessing Feature Engineering Models Data Science Model Zoos Datasets Aggregator XAI Aggregator Tasks Natural Language Processing (NLP) Research Labs Research Labs Preprocessing Sentiment Analysis Topic Modeling Image Image General General Image Generation General Text Prompt Multiple Video Reinforcement Learning (RL) RL Aggregator Datasets Datasets Website Flutter Dashboard Growth Courses AI Frameworks People Instructors Career Career Path Career Advice","title":"Resources for the Computational Digital Humanities Colab"},{"location":"resources_initial/#resources-for-the-computational-digital-humanities-colab","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo.","title":"Resources for the Computational Digital Humanities Colab"},{"location":"resources_initial/#contents","text":"","title":"Contents:"},{"location":"resources_initial/#models","text":"Datasets Models Metrics XAI","title":"Models"},{"location":"resources_initial/#tasks","text":"Natural Language Processing (NLP) Image Video Reinforcement Learning (RL)","title":"Tasks"},{"location":"resources_initial/#mlops","text":"Aggregator","title":"MLOPs"},{"location":"resources_initial/#growth","text":"Website Courses People Career","title":"Growth"},{"location":"resources_initial/#models_1","text":"","title":"Models"},{"location":"resources_initial/#datasets","text":"Aggregator Preprocessing Feature Engineering","title":"Datasets"},{"location":"resources_initial/#models_2","text":"Data Science Model Zoos","title":"Models"},{"location":"resources_initial/#datasets_1","text":"Aggregator","title":"Datasets"},{"location":"resources_initial/#xai","text":"Aggregator","title":"XAI"},{"location":"resources_initial/#tasks_1","text":"","title":"Tasks"},{"location":"resources_initial/#natural-language-processing-nlp","text":"","title":"Natural Language Processing (NLP)"},{"location":"resources_initial/#research-labs","text":"Research Labs Preprocessing Sentiment Analysis Topic Modeling","title":"Research Labs"},{"location":"resources_initial/#image","text":"","title":"Image"},{"location":"resources_initial/#image-general","text":"General","title":"Image General"},{"location":"resources_initial/#image-generation","text":"General Text Prompt Multiple","title":"Image Generation"},{"location":"resources_initial/#video","text":"","title":"Video"},{"location":"resources_initial/#reinforcement-learning-rl","text":"RL Aggregator","title":"Reinforcement Learning (RL)"},{"location":"resources_initial/#datasets_2","text":"Datasets","title":"Datasets"},{"location":"resources_initial/#website","text":"Flutter Dashboard","title":"Website"},{"location":"resources_initial/#growth_1","text":"","title":"Growth"},{"location":"resources_initial/#courses","text":"AI Frameworks","title":"Courses"},{"location":"resources_initial/#people","text":"Instructors","title":"People"},{"location":"resources_initial/#career","text":"Career Path Career Advice","title":"Career"},{"location":"socialmedia/","text":"Computational Digital Humanities Colab on Social Media Katherine Elkins Twitter: coming... LinkedIn: kate-elkins Facebook: kate.elkins.963 Jon Chun Twitter: jonchun2000 LinkedIn: jonchun2000 Facebook: jon.chun.94","title":"Social Media"},{"location":"socialmedia/#computational-digital-humanities-colab-on-social-media","text":"","title":"Computational Digital Humanities Colab on Social Media"},{"location":"socialmedia/#katherine-elkins","text":"Twitter: coming... LinkedIn: kate-elkins Facebook: kate.elkins.963","title":"Katherine Elkins"},{"location":"socialmedia/#jon-chun","text":"Twitter: jonchun2000 LinkedIn: jonchun2000 Facebook: jon.chun.94","title":"Jon Chun"},{"location":"resources/applications_dh/","text":"Applications: Digital Humanities (DH) This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Applications: Digital Humanities (DH)"},{"location":"resources/applications_dh/#applications-digital-humanities-dh","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Applications: Digital Humanities (DH)"},{"location":"resources/applications_dh/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/applications_fintech/","text":"Applications: FinTech (Financial Technology) This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Applications: FinTech (Financial Technology)"},{"location":"resources/applications_fintech/#applications-fintech-financial-technology","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Applications: FinTech (Financial Technology)"},{"location":"resources/applications_fintech/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/applications_medtech/","text":"Applications: MedTech (Medical Technology) This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Applications: MedTech (Medical Technology)"},{"location":"resources/applications_medtech/#applications-medtech-medical-technology","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Applications: MedTech (Medical Technology)"},{"location":"resources/applications_medtech/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/applications_security/","text":"Applications: Security This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Applications: Security"},{"location":"resources/applications_security/#applications-security","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Applications: Security"},{"location":"resources/applications_security/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/cs_db/","text":"CS: Database (DB) This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"CS: Database (DB)"},{"location":"resources/cs_db/#cs-database-db","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"CS: Database (DB)"},{"location":"resources/cs_db/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/cs_design/","text":"CS: Design (UX and more) This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"CS: Design (UX and more)"},{"location":"resources/cs_design/#cs-design-ux-and-more","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"CS: Design (UX and more)"},{"location":"resources/cs_design/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/cs_os/","text":"CS: Operating Systems (OS) This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"CS: Operating Systems (OS)"},{"location":"resources/cs_os/#cs-operating-systems-os","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"CS: Operating Systems (OS)"},{"location":"resources/cs_os/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/cs_programming/","text":"CS: Programming This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"CS: Programming"},{"location":"resources/cs_programming/#cs-programming","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"CS: Programming"},{"location":"resources/cs_programming/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/cs_python/","text":"CS: Python This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"CS: Python"},{"location":"resources/cs_python/#cs-python","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"CS: Python"},{"location":"resources/cs_python/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/cs_web/","text":"CS: Web Development This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"CS: Web Development"},{"location":"resources/cs_web/#cs-web-development","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"CS: Web Development"},{"location":"resources/cs_web/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/math_core/","text":"Math: Core This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Math: Core"},{"location":"resources/math_core/#math-core","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Math: Core"},{"location":"resources/math_core/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/math_engineering/","text":"Math: Engineering This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Math: Engineering"},{"location":"resources/math_engineering/#math-engineering","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Math: Engineering"},{"location":"resources/math_engineering/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/math_general/","text":"Math: General This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Math: General"},{"location":"resources/math_general/#math-general","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Math: General"},{"location":"resources/math_general/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/math_statistics/","text":"Math: Statistics This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Math: Statistics"},{"location":"resources/math_statistics/#math-statistics","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Math: Statistics"},{"location":"resources/math_statistics/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/personal_books/","text":"Personal: Books This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Personal: Books"},{"location":"resources/personal_books/#personal-books","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Personal: Books"},{"location":"resources/personal_books/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/personal_career/","text":"Personal: Career This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Personal: Career"},{"location":"resources/personal_career/#personal-career","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Personal: Career"},{"location":"resources/personal_career/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/personal_courses/","text":"Personal: Courses This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Personal: Courses"},{"location":"resources/personal_courses/#personal-courses","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Personal: Courses"},{"location":"resources/personal_courses/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/personal_people/","text":"Personal: People This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Personal: People"},{"location":"resources/personal_people/#personal-people","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Personal: People"},{"location":"resources/personal_people/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/personal_research/","text":"Personal: Research This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Personal: Research"},{"location":"resources/personal_research/#personal-research","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Personal: Research"},{"location":"resources/personal_research/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/pipeline_automl/","text":"Pipeline: AutoML This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. General Github Awesome Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it. Model Selection AutoML Performance https://github.com/deepchecks/deepchecks Deepchecks is a Python package for comprehensively validating your machine learning models and data with minimal effort. This includes checks related to various types of issues, such as model performance, data integrity, distribution mismatches, and more.","title":"Pipeline: AutoML"},{"location":"resources/pipeline_automl/#pipeline-automl","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo.","title":"Pipeline: AutoML"},{"location":"resources/pipeline_automl/#general","text":"Github Awesome","title":"General"},{"location":"resources/pipeline_automl/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/pipeline_automl/#model-selection","text":"AutoML","title":"Model Selection"},{"location":"resources/pipeline_automl/#performance","text":"https://github.com/deepchecks/deepchecks Deepchecks is a Python package for comprehensively validating your machine learning models and data with minimal effort. This includes checks related to various types of issues, such as model performance, data integrity, distribution mismatches, and more.","title":"Performance"},{"location":"resources/pipeline_data/","text":"Personal: Data This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Personal: Data"},{"location":"resources/pipeline_data/#personal-data","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Personal: Data"},{"location":"resources/pipeline_data/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/pipeline_metrics/","text":"Pipeline: Metrics This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Pipeline: Metrics"},{"location":"resources/pipeline_metrics/#pipeline-metrics","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Pipeline: Metrics"},{"location":"resources/pipeline_metrics/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/pipeline_mlops/","text":"Pipeline: Machine Learning Operations (MLOps) This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Pipeline: Machine Learning Operations (MLOps)"},{"location":"resources/pipeline_mlops/#pipeline-machine-learning-operations-mlops","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Pipeline: Machine Learning Operations (MLOps)"},{"location":"resources/pipeline_mlops/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/pipeline_models/","text":"Pipeline: Models This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Pipeline: Models"},{"location":"resources/pipeline_models/#pipeline-models","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Pipeline: Models"},{"location":"resources/pipeline_models/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/pipeline_visualizations/","text":"Pipeline: Visualizations This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Pipeline: Visualizations"},{"location":"resources/pipeline_visualizations/#pipeline-visualizations","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Pipeline: Visualizations"},{"location":"resources/pipeline_visualizations/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/pipeline_xai/","text":"Pipeline: eXplainable AI (XAI) This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Pipeline: eXplainable AI (XAI)"},{"location":"resources/pipeline_xai/#pipeline-explainable-ai-xai","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Pipeline: eXplainable AI (XAI)"},{"location":"resources/pipeline_xai/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/tasks_agents/","text":"Tasks: Agents This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Tasks: Agents"},{"location":"resources/tasks_agents/#tasks-agents","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Tasks: Agents"},{"location":"resources/tasks_agents/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/tasks_image/","text":"Tasks: Image This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Tasks: Image"},{"location":"resources/tasks_image/#tasks-image","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Tasks: Image"},{"location":"resources/tasks_image/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/tasks_nlp/","text":"Tasks: Natural Language Processing (NLP) This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Tasks: Natural Language Processing (NLP)"},{"location":"resources/tasks_nlp/#tasks-natural-language-processing-nlp","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Tasks: Natural Language Processing (NLP)"},{"location":"resources/tasks_nlp/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/tasks_simulations/","text":"Tasks: Simulations This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Tasks: Simulations"},{"location":"resources/tasks_simulations/#tasks-simulations","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Tasks: Simulations"},{"location":"resources/tasks_simulations/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/tasks_sound/","text":"Tasks: Sounds This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Tasks: Sounds"},{"location":"resources/tasks_sound/#tasks-sounds","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Tasks: Sounds"},{"location":"resources/tasks_sound/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources/tasks_video/","text":"Tasks: Video This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering Feature Engineering Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Tasks: Video"},{"location":"resources/tasks_video/#tasks-video","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engineering","title":"Tasks: Video"},{"location":"resources/tasks_video/#feature-engineering","text":"Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Feature Engineering"},{"location":"resources_old/courses_ai_frameworks/","text":"Courses: AI Frameworks This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. PyTorch Learn PyTorch for Deep Learning TensorFlow Zero to Mastery Deep Learning with TensorFlow","title":"Courses: AI Frameworks"},{"location":"resources_old/courses_ai_frameworks/#courses-ai-frameworks","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo.","title":"Courses: AI Frameworks"},{"location":"resources_old/courses_ai_frameworks/#pytorch","text":"Learn PyTorch for Deep Learning","title":"PyTorch"},{"location":"resources_old/courses_ai_frameworks/#tensorflow","text":"Zero to Mastery Deep Learning with TensorFlow","title":"TensorFlow"},{"location":"resources_old/data_aggregator/","text":"Datasets: Aggregators This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Huggingface The largest hub of ready-to-use datasets for ML models with fast, easy-to-use and efficient data manipulation tools","title":"Datasets: Aggregators"},{"location":"resources_old/data_aggregator/#datasets-aggregators","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Huggingface The largest hub of ready-to-use datasets for ML models with fast, easy-to-use and efficient data manipulation tools","title":"Datasets: Aggregators"},{"location":"resources_old/data_feature_engineering/","text":"Datasets: Feature Engineering This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Datasets: Feature Engineering"},{"location":"resources_old/data_feature_engineering/#datasets-feature-engineering","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Feature Engine Feature-engine is a Python library with multiple transformers to engineer and select features for use in machine learning models. Feature-engine's transformers follow Scikit-learn's functionality with fit() and transform() methods to learn the transforming parameters from the data and then transform it.","title":"Datasets: Feature Engineering"},{"location":"resources_old/data_preprocessing/","text":"Datasets: Preprocessing This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Distillation Dataset distillation is the task of synethesizing a small dataset such that models trained on it achieve high performance on the original large dataset. A dataset distillation algorithm takes as input a large real dataset to be distilled (training set), and outputs a small synthetic distilled dataset, which is evaluated by testing models trained on this distilled dataset on a separate real dataset (validation/test set). A good small distilled dataset is not only useful in dataset understanding, but has various applications (e.g., continual learning and neural architecture search). This task was first introduced in the paper Dataset Distillation [Tongzhou Wang et al., '18], which is presented in details on the project [Dataset Distillation].","title":"Datasets: Preprocessing"},{"location":"resources_old/data_preprocessing/#datasets-preprocessing","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Distillation Dataset distillation is the task of synethesizing a small dataset such that models trained on it achieve high performance on the original large dataset. A dataset distillation algorithm takes as input a large real dataset to be distilled (training set), and outputs a small synthetic distilled dataset, which is evaluated by testing models trained on this distilled dataset on a separate real dataset (validation/test set). A good small distilled dataset is not only useful in dataset understanding, but has various applications (e.g., continual learning and neural architecture search). This task was first introduced in the paper Dataset Distillation [Tongzhou Wang et al., '18], which is presented in details on the project [Dataset Distillation].","title":"Datasets: Preprocessing"},{"location":"resources_old/image_general/","text":"Image: General This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Compilation Computer Vision (CV) PyTorch Image Models PyTorch image models, scripts, pretrained weights -- ResNet, ResNeXT, EfficientNet, EfficientNetV2, NFNet, Vision Transformer, MixNet, MobileNet-V3/V2, RegNet, DPN, CSPNet, and more","title":"Image: General"},{"location":"resources_old/image_general/#image-general","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo.","title":"Image: General"},{"location":"resources_old/image_general/#compilation","text":"Computer Vision (CV) PyTorch Image Models PyTorch image models, scripts, pretrained weights -- ResNet, ResNeXT, EfficientNet, EfficientNetV2, NFNet, Vision Transformer, MixNet, MobileNet-V3/V2, RegNet, DPN, CSPNet, and more","title":"Compilation"},{"location":"resources_old/image_syn_general/","text":"Image Synthesis: General This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Models PyTorch Image Models Generative Awesome Pretrained StyleGAN2 People Phil Wang/lucidrains","title":"Image Synthesis: General"},{"location":"resources_old/image_syn_general/#image-synthesis-general","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo.","title":"Image Synthesis: General"},{"location":"resources_old/image_syn_general/#models","text":"PyTorch Image Models","title":"Models"},{"location":"resources_old/image_syn_general/#generative","text":"Awesome Pretrained StyleGAN2","title":"Generative"},{"location":"resources_old/image_syn_general/#people","text":"Phil Wang/lucidrains","title":"People"},{"location":"resources_old/image_syn_multiple/","text":"Image Synthesis: Multiple These resources include elements that fall into multiple Image Synthesis categories (e.g. general, text prompt, etc). If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Huggingface Diffusers","title":"Image Synthesis: Multiple"},{"location":"resources_old/image_syn_multiple/#image-synthesis-multiple","text":"These resources include elements that fall into multiple Image Synthesis categories (e.g. general, text prompt, etc). If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Huggingface Diffusers","title":"Image Synthesis: Multiple"},{"location":"resources_old/image_syn_textprompt/","text":"Image Synthesis: Text to Image This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Awesome Pretrained StyleGAN2","title":"Image Synthesis: Text to Image"},{"location":"resources_old/image_syn_textprompt/#image-synthesis-text-to-image","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Awesome Pretrained StyleGAN2","title":"Image Synthesis: Text to Image"},{"location":"resources_old/models_data_science/","text":"Models: Data Science This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Books Python for Data Analysis, 2nd Ed - Wes McKinney Materials and IPython notebooks for \"Python for Data Analysis\" by Wes McKinney, published by O'Reilly Media","title":"Models: Data Science"},{"location":"resources_old/models_data_science/#models-data-science","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo.","title":"Models: Data Science"},{"location":"resources_old/models_data_science/#books","text":"Python for Data Analysis, 2nd Ed - Wes McKinney Materials and IPython notebooks for \"Python for Data Analysis\" by Wes McKinney, published by O'Reilly Media","title":"Books"},{"location":"resources_old/models_xai/","text":"Models: XAI These resources include elements that fall into multiple Image Synthesis categories (e.g. general, text prompt, etc). If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. PiML","title":"Models: XAI"},{"location":"resources_old/models_xai/#models-xai","text":"These resources include elements that fall into multiple Image Synthesis categories (e.g. general, text prompt, etc). If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. PiML","title":"Models: XAI"},{"location":"resources_old/models_zoos/","text":"Models: Zoos These resources include elements that fall into multiple Image Synthesis categories (e.g. general, text prompt, etc). If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Data Science Coming Machine Learning Coming Deep Learning Coming Big Models (BM) / Large Language Models (LLM) BMList","title":"Models: Zoos"},{"location":"resources_old/models_zoos/#models-zoos","text":"These resources include elements that fall into multiple Image Synthesis categories (e.g. general, text prompt, etc). If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo.","title":"Models: Zoos"},{"location":"resources_old/models_zoos/#data-science","text":"Coming","title":"Data Science"},{"location":"resources_old/models_zoos/#machine-learning","text":"Coming","title":"Machine Learning"},{"location":"resources_old/models_zoos/#deep-learning","text":"Coming","title":"Deep Learning"},{"location":"resources_old/models_zoos/#big-models-bm-large-language-models-llm","text":"BMList","title":"Big Models (BM) / Large Language Models (LLM)"},{"location":"resources_old/nlp_labs/","text":"NLP: Research Labs This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Google Research: Language","title":"NLP: Research Labs"},{"location":"resources_old/nlp_labs/#nlp-research-labs","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Google Research: Language","title":"NLP: Research Labs"},{"location":"resources_old/nlp_sentiment_analysis/","text":"NLP: Sentiment Analysis This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Google Research: Language","title":"NLP: Sentiment Analysis"},{"location":"resources_old/nlp_sentiment_analysis/#nlp-sentiment-analysis","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Google Research: Language","title":"NLP: Sentiment Analysis"},{"location":"resources_old/nlp_topic_modeling/","text":"NLP: Topic Modeling This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Large Language Models TopClus","title":"NLP: Topic Modeling"},{"location":"resources_old/nlp_topic_modeling/#nlp-topic-modeling","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo.","title":"NLP: Topic Modeling"},{"location":"resources_old/nlp_topic_modeling/#large-language-models","text":"TopClus","title":"Large Language Models"},{"location":"resources_old/people_instructors/","text":"People: Instructors This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. AI * Daniel Bourke","title":"People: Instructors"},{"location":"resources_old/people_instructors/#people-instructors","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. AI * Daniel Bourke","title":"People: Instructors"},{"location":"resources_old/tasks_rl_aggregator/","text":"Tasks: Reinforcement Learning (RL) This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. RL Agents RL-Agents","title":"Tasks: Reinforcement Learning (RL)"},{"location":"resources_old/tasks_rl_aggregator/#tasks-reinforcement-learning-rl","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo.","title":"Tasks: Reinforcement Learning (RL)"},{"location":"resources_old/tasks_rl_aggregator/#rl-agents","text":"RL-Agents","title":"RL Agents"},{"location":"resources_old/video_data/","text":"Video: Datasets This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo. Labeled CelebV Clips-HQ CelebV-HQ contains 35,666 video clips with the resolution of 512x512 at least, involving 15,653 identities. All clips are labeled manually with 83 facial attributes, covering appearance, action, and emotion. We conduct a comprehensive analysis in terms of age, ethnicity, brightness stability, motion smoothness, head pose diversity, and data quality to demonstrate the diversity and temporal coherence of CelebV-HQ. Besides, its versatility and potential are validated on two representative tasks, i.e., unconditional video generation and video facial attribute editing.","title":"Video: Datasets"},{"location":"resources_old/video_data/#video-datasets","text":"This is a list of many of the most common, useful and interesting resources for Computational Digital Humanities. All items are organized into an imperfect taxonomy according to application category. If you have a resource we should add, please either (a) email us at chunj@kenyon.edu or (b) submit a pull request for this ai-for-the-digital-humanities github repo.","title":"Video: Datasets"},{"location":"resources_old/video_data/#labeled","text":"CelebV Clips-HQ CelebV-HQ contains 35,666 video clips with the resolution of 512x512 at least, involving 15,653 identities. All clips are labeled manually with 83 facial attributes, covering appearance, action, and emotion. We conduct a comprehensive analysis in terms of age, ethnicity, brightness stability, motion smoothness, head pose diversity, and data quality to demonstrate the diversity and temporal coherence of CelebV-HQ. Besides, its versatility and potential are validated on two representative tasks, i.e., unconditional video generation and video facial attribute editing.","title":"Labeled"}]}